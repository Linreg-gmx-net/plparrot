--    PL/Parrot is copyright Jonathan "Duke" Leto and friends 2009-2011
-- This code is released under the Artistic 2.0 License, see LICENSE for
-- details.

-- handler function for PL/ParrotU a.k.a PL/PIRU
CREATE OR REPLACE FUNCTION plparrotu_call_handler ()
RETURNS language_handler AS 'MODULE_PATHNAME' LANGUAGE C;

-- handler function for PL/Parrot a.k.a. PL/PIR
CREATE OR REPLACE FUNCTION plparrot_call_handler ()
RETURNS language_handler AS 'MODULE_PATHNAME' LANGUAGE C;

-- handler function for PL/Perl6
CREATE OR REPLACE FUNCTION plperl6_call_handler ()
RETURNS language_handler AS 'MODULE_PATHNAME' LANGUAGE C;

-- handler function for PL/Perl6U
CREATE OR REPLACE FUNCTION plperl6u_call_handler ()
RETURNS language_handler AS 'MODULE_PATHNAME' LANGUAGE C;

-- language
DROP LANGUAGE IF EXISTS plparrot CASCADE;
CREATE trusted LANGUAGE plparrot HANDLER plparrot_call_handler;

-- language
DROP LANGUAGE IF EXISTS plparrotu CASCADE;
CREATE LANGUAGE plparrotu HANDLER plparrotu_call_handler;

-- plpir is an alias for plparrot
DROP LANGUAGE IF EXISTS plpir CASCADE;
CREATE trusted LANGUAGE plpir HANDLER plparrot_call_handler;

-- plpiru is an alias for plparrotu
DROP LANGUAGE IF EXISTS plpiru CASCADE;
CREATE LANGUAGE plpiru HANDLER plparrotu_call_handler;

DROP LANGUAGE IF EXISTS plperl6 CASCADE;
CREATE trusted LANGUAGE plperl6 HANDLER plperl6_call_handler;

DROP LANGUAGE IF EXISTS plperl6u CASCADE;
CREATE LANGUAGE plperl6u HANDLER plperl6u_call_handler;
